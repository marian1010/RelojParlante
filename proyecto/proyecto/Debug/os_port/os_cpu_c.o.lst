   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"os_cpu_c.c"
  21              	.Ltext0:
  22              		.file 1 "../os_port/os_cpu_c.c"
 1665              		.align	2
 1666              		.global	OSInitHookBegin
 1668              	OSInitHookBegin:
 1669              	.LFB0:
   1:../os_port/os_cpu_c.c **** /*-----------------------------------------------------------------
   2:../os_port/os_cpu_c.c **** **
   3:../os_port/os_cpu_c.c **** **  Fichero:
   4:../os_port/os_cpu_c.c **** **    os_cpu_c.c  15/3/2015
   5:../os_port/os_cpu_c.c **** **
   6:../os_port/os_cpu_c.c **** **    (c) J.M. Mendias
   7:../os_port/os_cpu_c.c **** **    Programación de Sistemas y Dispositivos
   8:../os_port/os_cpu_c.c **** **    Facultad de Informática. Universidad Complutense de Madrid
   9:../os_port/os_cpu_c.c **** **
  10:../os_port/os_cpu_c.c **** **  Propósito:
  11:../os_port/os_cpu_c.c **** **    Portar el kernel de tiempo real uC/OS-II a la placa de prototipado
  12:../os_port/os_cpu_c.c **** **    Embest S3CEV40, implementando las funciones:
  13:../os_port/os_cpu_c.c **** **      - void OSInitHookBegin( void )
  14:../os_port/os_cpu_c.c **** **      - void OSInitHookEnd( void )
  15:../os_port/os_cpu_c.c **** **      - void OSTaskCreateHook( OS_TCB *ptcb )
  16:../os_port/os_cpu_c.c **** **      - void OSTaskDelHook( OS_TCB *ptcb )
  17:../os_port/os_cpu_c.c **** **      - void OSTaskIdleHook( void )
  18:../os_port/os_cpu_c.c **** **      - void OSTaskStatHook( void )
  19:../os_port/os_cpu_c.c **** **      - OS_STK *OSTaskStkInit( void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt )
  20:../os_port/os_cpu_c.c **** **      - void OSTaskSwHook( void )
  21:../os_port/os_cpu_c.c **** **      - void OSTCBInitHook( OS_TCB *ptcb )
  22:../os_port/os_cpu_c.c **** **      - void OSTimeTickHook( void )
  23:../os_port/os_cpu_c.c **** **
  24:../os_port/os_cpu_c.c **** **  Notas de diseño:
  25:../os_port/os_cpu_c.c **** **    - Implementado según las especificaciones del capítulo 3 del
  26:../os_port/os_cpu_c.c **** **      libro "MicroC/OS-II. The Real-Time Kernel (2nd. edition)" 
  27:../os_port/os_cpu_c.c **** **      de Jean J. Labrosse
  28:../os_port/os_cpu_c.c **** **
  29:../os_port/os_cpu_c.c **** **---------------------------------------------------------------*/
  30:../os_port/os_cpu_c.c **** 
  31:../os_port/os_cpu_c.c **** #define  OS_CPU_GLOBALS
  32:../os_port/os_cpu_c.c **** 
  33:../os_port/os_cpu_c.c **** #include "os_cpu.h"
  34:../os_port/os_cpu_c.c **** #include "os_cfg.h"
  35:../os_port/os_cpu_c.c **** #include "ucos_ii.h"
  36:../os_port/os_cpu_c.c **** 
  37:../os_port/os_cpu_c.c **** /*
  38:../os_port/os_cpu_c.c **** ** Esta función es llamada con las interrupciones deshabilitadas por OSInit() justo después de su i
  39:../os_port/os_cpu_c.c **** */
  40:../os_port/os_cpu_c.c **** 
  41:../os_port/os_cpu_c.c **** #if OS_CPU_HOOKS_EN > 0
  42:../os_port/os_cpu_c.c **** void OSInitHookBegin( void )
  43:../os_port/os_cpu_c.c **** {
 1670              		.loc 1 43 0
 1671              		.cfi_startproc
 1672              		@ Function supports interworking.
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 1, uses_anonymous_args = 0
 1675 0000 0DC0A0E1 		mov	ip, sp
 1676              	.LCFI0:
 1677              		.cfi_def_cfa_register 12
 1678 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1679 0008 04B04CE2 		sub	fp, ip, #4
 1680              		.cfi_offset 14, -8
 1681              		.cfi_offset 13, -12
 1682              		.cfi_offset 11, -16
 1683              	.LCFI1:
 1684              		.cfi_def_cfa 11, 4
  44:../os_port/os_cpu_c.c **** }
 1685              		.loc 1 44 0
 1686 000c 0CD04BE2 		sub	sp, fp, #12
 1687 0010 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1688 0014 1EFF2FE1 		bx	lr
 1689              		.cfi_endproc
 1690              	.LFE0:
 1692              		.align	2
 1693              		.global	OSInitHookEnd
 1695              	OSInitHookEnd:
 1696              	.LFB1:
  45:../os_port/os_cpu_c.c **** #endif
  46:../os_port/os_cpu_c.c **** 
  47:../os_port/os_cpu_c.c **** /*
  48:../os_port/os_cpu_c.c **** ** Esta función es llamada con las interrupciones deshabilitadas por OSInit() justo antes de su fin
  49:../os_port/os_cpu_c.c **** */
  50:../os_port/os_cpu_c.c **** 
  51:../os_port/os_cpu_c.c **** #if OS_CPU_HOOKS_EN > 0
  52:../os_port/os_cpu_c.c **** void OSInitHookEnd( void )
  53:../os_port/os_cpu_c.c **** {
 1697              		.loc 1 53 0
 1698              		.cfi_startproc
 1699              		@ Function supports interworking.
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 1, uses_anonymous_args = 0
 1702 0018 0DC0A0E1 		mov	ip, sp
 1703              	.LCFI2:
 1704              		.cfi_def_cfa_register 12
 1705 001c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1706 0020 04B04CE2 		sub	fp, ip, #4
 1707              		.cfi_offset 14, -8
 1708              		.cfi_offset 13, -12
 1709              		.cfi_offset 11, -16
 1710              	.LCFI3:
 1711              		.cfi_def_cfa 11, 4
  54:../os_port/os_cpu_c.c **** }
 1712              		.loc 1 54 0
 1713 0024 0CD04BE2 		sub	sp, fp, #12
 1714 0028 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1715 002c 1EFF2FE1 		bx	lr
 1716              		.cfi_endproc
 1717              	.LFE1:
 1719              		.align	2
 1720              		.global	OSTaskCreateHook
 1722              	OSTaskCreateHook:
 1723              	.LFB2:
  55:../os_port/os_cpu_c.c **** #endif
  56:../os_port/os_cpu_c.c **** 
  57:../os_port/os_cpu_c.c **** /*
  58:../os_port/os_cpu_c.c **** ** Esta función es llamada con las interrupciones deshabilitadas cada vez que se crea una tarea.
  59:../os_port/os_cpu_c.c **** ** Toma como argumento un puntero al TCB de la tarea recién creada.
  60:../os_port/os_cpu_c.c **** */
  61:../os_port/os_cpu_c.c **** 
  62:../os_port/os_cpu_c.c **** #if OS_CPU_HOOKS_EN > 0 
  63:../os_port/os_cpu_c.c **** void OSTaskCreateHook( OS_TCB *ptcb )
  64:../os_port/os_cpu_c.c **** {
 1724              		.loc 1 64 0
 1725              		.cfi_startproc
 1726              		@ Function supports interworking.
 1727              		@ args = 0, pretend = 0, frame = 8
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729 0030 0DC0A0E1 		mov	ip, sp
 1730              	.LCFI4:
 1731              		.cfi_def_cfa_register 12
 1732 0034 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1733 0038 04B04CE2 		sub	fp, ip, #4
 1734              		.cfi_offset 14, -8
 1735              		.cfi_offset 13, -12
 1736              		.cfi_offset 11, -16
 1737              	.LCFI5:
 1738              		.cfi_def_cfa 11, 4
 1739 003c 08D04DE2 		sub	sp, sp, #8
 1740 0040 10000BE5 		str	r0, [fp, #-16]
  65:../os_port/os_cpu_c.c **** }
 1741              		.loc 1 65 0
 1742 0044 0CD04BE2 		sub	sp, fp, #12
 1743 0048 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1744 004c 1EFF2FE1 		bx	lr
 1745              		.cfi_endproc
 1746              	.LFE2:
 1748              		.align	2
 1749              		.global	OSTaskDelHook
 1751              	OSTaskDelHook:
 1752              	.LFB3:
  66:../os_port/os_cpu_c.c **** #endif
  67:../os_port/os_cpu_c.c **** 
  68:../os_port/os_cpu_c.c **** /*
  69:../os_port/os_cpu_c.c **** ** Esta función es llamada con las interrupciones deshabilitadas cada vez que se borra una tarea.
  70:../os_port/os_cpu_c.c **** ** Toma como argumento un puntero al TCB de la tarea borrada.
  71:../os_port/os_cpu_c.c **** */
  72:../os_port/os_cpu_c.c **** 
  73:../os_port/os_cpu_c.c **** #if OS_CPU_HOOKS_EN > 0 
  74:../os_port/os_cpu_c.c **** void OSTaskDelHook( OS_TCB *ptcb )
  75:../os_port/os_cpu_c.c **** {
 1753              		.loc 1 75 0
 1754              		.cfi_startproc
 1755              		@ Function supports interworking.
 1756              		@ args = 0, pretend = 0, frame = 8
 1757              		@ frame_needed = 1, uses_anonymous_args = 0
 1758 0050 0DC0A0E1 		mov	ip, sp
 1759              	.LCFI6:
 1760              		.cfi_def_cfa_register 12
 1761 0054 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1762 0058 04B04CE2 		sub	fp, ip, #4
 1763              		.cfi_offset 14, -8
 1764              		.cfi_offset 13, -12
 1765              		.cfi_offset 11, -16
 1766              	.LCFI7:
 1767              		.cfi_def_cfa 11, 4
 1768 005c 08D04DE2 		sub	sp, sp, #8
 1769 0060 10000BE5 		str	r0, [fp, #-16]
  76:../os_port/os_cpu_c.c **** }
 1770              		.loc 1 76 0
 1771 0064 0CD04BE2 		sub	sp, fp, #12
 1772 0068 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1773 006c 1EFF2FE1 		bx	lr
 1774              		.cfi_endproc
 1775              	.LFE3:
 1777              		.align	2
 1778              		.global	OSTaskIdleHook
 1780              	OSTaskIdleHook:
 1781              	.LFB4:
  77:../os_port/os_cpu_c.c **** #endif
  78:../os_port/os_cpu_c.c **** 
  79:../os_port/os_cpu_c.c **** /*
  80:../os_port/os_cpu_c.c **** ** Esta función es llamada con las interrupciones habilitadas por la tarea OS_TaskIdle().
  81:../os_port/os_cpu_c.c **** */
  82:../os_port/os_cpu_c.c **** 
  83:../os_port/os_cpu_c.c **** #if OS_CPU_HOOKS_EN > 0
  84:../os_port/os_cpu_c.c **** void OSTaskIdleHook( void )
  85:../os_port/os_cpu_c.c **** {
 1782              		.loc 1 85 0
 1783              		.cfi_startproc
 1784              		@ Function supports interworking.
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 1, uses_anonymous_args = 0
 1787 0070 0DC0A0E1 		mov	ip, sp
 1788              	.LCFI8:
 1789              		.cfi_def_cfa_register 12
 1790 0074 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1791 0078 04B04CE2 		sub	fp, ip, #4
 1792              		.cfi_offset 14, -8
 1793              		.cfi_offset 13, -12
 1794              		.cfi_offset 11, -16
 1795              	.LCFI9:
 1796              		.cfi_def_cfa 11, 4
  86:../os_port/os_cpu_c.c ****     sleep();    /* Pone a la CPU en estado IDLE, sale por interrupción */
 1797              		.loc 1 86 0
 1798 007c FEFFFFEB 		bl	sleep
  87:../os_port/os_cpu_c.c **** }
 1799              		.loc 1 87 0
 1800 0080 0CD04BE2 		sub	sp, fp, #12
 1801 0084 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1802 0088 1EFF2FE1 		bx	lr
 1803              		.cfi_endproc
 1804              	.LFE4:
 1806              		.align	2
 1807              		.global	OSTaskStatHook
 1809              	OSTaskStatHook:
 1810              	.LFB5:
  88:../os_port/os_cpu_c.c **** #endif
  89:../os_port/os_cpu_c.c **** 
  90:../os_port/os_cpu_c.c **** /*
  91:../os_port/os_cpu_c.c **** ** Esta función es llamada cada segundo por la tarea OSTaskStat().
  92:../os_port/os_cpu_c.c **** */
  93:../os_port/os_cpu_c.c **** 
  94:../os_port/os_cpu_c.c **** #if OS_CPU_HOOKS_EN > 0 
  95:../os_port/os_cpu_c.c **** void OSTaskStatHook( void )
  96:../os_port/os_cpu_c.c **** {
 1811              		.loc 1 96 0
 1812              		.cfi_startproc
 1813              		@ Function supports interworking.
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 1, uses_anonymous_args = 0
 1816 008c 0DC0A0E1 		mov	ip, sp
 1817              	.LCFI10:
 1818              		.cfi_def_cfa_register 12
 1819 0090 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1820 0094 04B04CE2 		sub	fp, ip, #4
 1821              		.cfi_offset 14, -8
 1822              		.cfi_offset 13, -12
 1823              		.cfi_offset 11, -16
 1824              	.LCFI11:
 1825              		.cfi_def_cfa 11, 4
  97:../os_port/os_cpu_c.c **** }
 1826              		.loc 1 97 0
 1827 0098 0CD04BE2 		sub	sp, fp, #12
 1828 009c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1829 00a0 1EFF2FE1 		bx	lr
 1830              		.cfi_endproc
 1831              	.LFE5:
 1833              		.align	2
 1834              		.global	OSTaskStkInit
 1836              	OSTaskStkInit:
 1837              	.LFB6:
  98:../os_port/os_cpu_c.c **** #endif
  99:../os_port/os_cpu_c.c **** 
 100:../os_port/os_cpu_c.c **** /*
 101:../os_port/os_cpu_c.c **** ** Esta función es llamada con las interrupciones deshabilitadas cada vez que se crea una tarea par
 102:../os_port/os_cpu_c.c **** ** Toma los siguientes argumentos:
 103:../os_port/os_cpu_c.c **** **   - void (*task)(void *pd) -- puntero al código de la tarea
 104:../os_port/os_cpu_c.c **** **   - void *pdata            -- puntero a los argumentos que tomará la tarea cuando se ejecute por
 105:../os_port/os_cpu_c.c **** **   - OS_STK *ptos           -- puntero a la cima de la pila en la que la función inicializará el 
 106:../os_port/os_cpu_c.c **** **   - INT16U opt             -- permite indicar opciones para modificar el comportamiento de la fu
 107:../os_port/os_cpu_c.c **** ** Devuelve un puntero a la nueva cima de la pila
 108:../os_port/os_cpu_c.c **** */
 109:../os_port/os_cpu_c.c **** OS_STK *OSTaskStkInit( void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt )
 110:../os_port/os_cpu_c.c **** {
 1838              		.loc 1 110 0
 1839              		.cfi_startproc
 1840              		@ Function supports interworking.
 1841              		@ args = 0, pretend = 0, frame = 16
 1842              		@ frame_needed = 1, uses_anonymous_args = 0
 1843 00a4 0DC0A0E1 		mov	ip, sp
 1844              	.LCFI12:
 1845              		.cfi_def_cfa_register 12
 1846 00a8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1847 00ac 04B04CE2 		sub	fp, ip, #4
 1848              		.cfi_offset 14, -8
 1849              		.cfi_offset 13, -12
 1850              		.cfi_offset 11, -16
 1851              	.LCFI13:
 1852              		.cfi_def_cfa 11, 4
 1853 00b0 10D04DE2 		sub	sp, sp, #16
 1854 00b4 10000BE5 		str	r0, [fp, #-16]
 1855 00b8 14100BE5 		str	r1, [fp, #-20]
 1856 00bc 18200BE5 		str	r2, [fp, #-24]
 1857 00c0 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 111:../os_port/os_cpu_c.c **** 
 112:../os_port/os_cpu_c.c ****     #if OS_STK_GROWTH == 1               /* Si la pila crece de de direcciones ALTAS hacia BAJAS */
 113:../os_port/os_cpu_c.c **** 
 114:../os_port/os_cpu_c.c ****     *(ptos)   = (INT32U) task;        /* Apila el punto de entrada a la tarea                 */
 1858              		.loc 1 114 0
 1859 00c4 10201BE5 		ldr	r2, [fp, #-16]
 1860 00c8 18301BE5 		ldr	r3, [fp, #-24]
 1861 00cc 002083E5 		str	r2, [r3, #0]
 115:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila LR                                             */
 1862              		.loc 1 115 0
 1863 00d0 18301BE5 		ldr	r3, [fp, #-24]
 1864 00d4 043043E2 		sub	r3, r3, #4
 1865 00d8 18300BE5 		str	r3, [fp, #-24]
 1866 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1867 00e0 0020A0E3 		mov	r2, #0
 1868 00e4 002083E5 		str	r2, [r3, #0]
 116:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R12                                            */
 1869              		.loc 1 116 0
 1870 00e8 18301BE5 		ldr	r3, [fp, #-24]
 1871 00ec 043043E2 		sub	r3, r3, #4
 1872 00f0 18300BE5 		str	r3, [fp, #-24]
 1873 00f4 18301BE5 		ldr	r3, [fp, #-24]
 1874 00f8 0020A0E3 		mov	r2, #0
 1875 00fc 002083E5 		str	r2, [r3, #0]
 117:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R11                                            */
 1876              		.loc 1 117 0
 1877 0100 18301BE5 		ldr	r3, [fp, #-24]
 1878 0104 043043E2 		sub	r3, r3, #4
 1879 0108 18300BE5 		str	r3, [fp, #-24]
 1880 010c 18301BE5 		ldr	r3, [fp, #-24]
 1881 0110 0020A0E3 		mov	r2, #0
 1882 0114 002083E5 		str	r2, [r3, #0]
 118:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R10                                            */
 1883              		.loc 1 118 0
 1884 0118 18301BE5 		ldr	r3, [fp, #-24]
 1885 011c 043043E2 		sub	r3, r3, #4
 1886 0120 18300BE5 		str	r3, [fp, #-24]
 1887 0124 18301BE5 		ldr	r3, [fp, #-24]
 1888 0128 0020A0E3 		mov	r2, #0
 1889 012c 002083E5 		str	r2, [r3, #0]
 119:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R9                                             */
 1890              		.loc 1 119 0
 1891 0130 18301BE5 		ldr	r3, [fp, #-24]
 1892 0134 043043E2 		sub	r3, r3, #4
 1893 0138 18300BE5 		str	r3, [fp, #-24]
 1894 013c 18301BE5 		ldr	r3, [fp, #-24]
 1895 0140 0020A0E3 		mov	r2, #0
 1896 0144 002083E5 		str	r2, [r3, #0]
 120:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R8                                             */
 1897              		.loc 1 120 0
 1898 0148 18301BE5 		ldr	r3, [fp, #-24]
 1899 014c 043043E2 		sub	r3, r3, #4
 1900 0150 18300BE5 		str	r3, [fp, #-24]
 1901 0154 18301BE5 		ldr	r3, [fp, #-24]
 1902 0158 0020A0E3 		mov	r2, #0
 1903 015c 002083E5 		str	r2, [r3, #0]
 121:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R7                                             */
 1904              		.loc 1 121 0
 1905 0160 18301BE5 		ldr	r3, [fp, #-24]
 1906 0164 043043E2 		sub	r3, r3, #4
 1907 0168 18300BE5 		str	r3, [fp, #-24]
 1908 016c 18301BE5 		ldr	r3, [fp, #-24]
 1909 0170 0020A0E3 		mov	r2, #0
 1910 0174 002083E5 		str	r2, [r3, #0]
 122:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R6                                             */
 1911              		.loc 1 122 0
 1912 0178 18301BE5 		ldr	r3, [fp, #-24]
 1913 017c 043043E2 		sub	r3, r3, #4
 1914 0180 18300BE5 		str	r3, [fp, #-24]
 1915 0184 18301BE5 		ldr	r3, [fp, #-24]
 1916 0188 0020A0E3 		mov	r2, #0
 1917 018c 002083E5 		str	r2, [r3, #0]
 123:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R5                                             */
 1918              		.loc 1 123 0
 1919 0190 18301BE5 		ldr	r3, [fp, #-24]
 1920 0194 043043E2 		sub	r3, r3, #4
 1921 0198 18300BE5 		str	r3, [fp, #-24]
 1922 019c 18301BE5 		ldr	r3, [fp, #-24]
 1923 01a0 0020A0E3 		mov	r2, #0
 1924 01a4 002083E5 		str	r2, [r3, #0]
 124:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R4                                             */
 1925              		.loc 1 124 0
 1926 01a8 18301BE5 		ldr	r3, [fp, #-24]
 1927 01ac 043043E2 		sub	r3, r3, #4
 1928 01b0 18300BE5 		str	r3, [fp, #-24]
 1929 01b4 18301BE5 		ldr	r3, [fp, #-24]
 1930 01b8 0020A0E3 		mov	r2, #0
 1931 01bc 002083E5 		str	r2, [r3, #0]
 125:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R3                                             */
 1932              		.loc 1 125 0
 1933 01c0 18301BE5 		ldr	r3, [fp, #-24]
 1934 01c4 043043E2 		sub	r3, r3, #4
 1935 01c8 18300BE5 		str	r3, [fp, #-24]
 1936 01cc 18301BE5 		ldr	r3, [fp, #-24]
 1937 01d0 0020A0E3 		mov	r2, #0
 1938 01d4 002083E5 		str	r2, [r3, #0]
 126:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R2                                             */
 1939              		.loc 1 126 0
 1940 01d8 18301BE5 		ldr	r3, [fp, #-24]
 1941 01dc 043043E2 		sub	r3, r3, #4
 1942 01e0 18300BE5 		str	r3, [fp, #-24]
 1943 01e4 18301BE5 		ldr	r3, [fp, #-24]
 1944 01e8 0020A0E3 		mov	r2, #0
 1945 01ec 002083E5 		str	r2, [r3, #0]
 127:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) 0;           /* Apila R1                                             */
 1946              		.loc 1 127 0
 1947 01f0 18301BE5 		ldr	r3, [fp, #-24]
 1948 01f4 043043E2 		sub	r3, r3, #4
 1949 01f8 18300BE5 		str	r3, [fp, #-24]
 1950 01fc 18301BE5 		ldr	r3, [fp, #-24]
 1951 0200 0020A0E3 		mov	r2, #0
 1952 0204 002083E5 		str	r2, [r3, #0]
 128:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) pdata;       /* Apila R0 : argumento                                 */
 1953              		.loc 1 128 0
 1954 0208 18301BE5 		ldr	r3, [fp, #-24]
 1955 020c 043043E2 		sub	r3, r3, #4
 1956 0210 18300BE5 		str	r3, [fp, #-24]
 1957 0214 14201BE5 		ldr	r2, [fp, #-20]
 1958 0218 18301BE5 		ldr	r3, [fp, #-24]
 1959 021c 002083E5 		str	r2, [r3, #0]
 129:../os_port/os_cpu_c.c ****     *(--ptos) = (INT32U) (0x13|0x0);  /* Apila CPSR (IRQ y FIQ habilitadas, modo SVC)         */
 1960              		.loc 1 129 0
 1961 0220 18301BE5 		ldr	r3, [fp, #-24]
 1962 0224 043043E2 		sub	r3, r3, #4
 1963 0228 18300BE5 		str	r3, [fp, #-24]
 1964 022c 18301BE5 		ldr	r3, [fp, #-24]
 1965 0230 1320A0E3 		mov	r2, #19
 1966 0234 002083E5 		str	r2, [r3, #0]
 130:../os_port/os_cpu_c.c **** 
 131:../os_port/os_cpu_c.c ****     return (ptos);
 1967              		.loc 1 131 0
 1968 0238 18301BE5 		ldr	r3, [fp, #-24]
 132:../os_port/os_cpu_c.c **** 
 133:../os_port/os_cpu_c.c **** #else
 134:../os_port/os_cpu_c.c **** #error OS_STK_GROWTH no implementado
 135:../os_port/os_cpu_c.c **** #endif
 136:../os_port/os_cpu_c.c **** 
 137:../os_port/os_cpu_c.c **** }
 1969              		.loc 1 137 0
 1970 023c 0300A0E1 		mov	r0, r3
 1971 0240 0CD04BE2 		sub	sp, fp, #12
 1972 0244 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1973 0248 1EFF2FE1 		bx	lr
 1974              		.cfi_endproc
 1975              	.LFE6:
 1977              		.align	2
 1978              		.global	OSTaskSwHook
 1980              	OSTaskSwHook:
 1981              	.LFB7:
 138:../os_port/os_cpu_c.c **** 
 139:../os_port/os_cpu_c.c **** /*
 140:../os_port/os_cpu_c.c **** ** Esta función es llamada con las interrupciones deshabilitadas cada vez que se conmuta de tarea.
 141:../os_port/os_cpu_c.c **** ** Podrá acceder a las variable globales:
 142:../os_port/os_cpu_c.c **** **   - OS_TCB *OSTCBCur que apuntará al TCB de la tarea en ejecución (a suspender)
 143:../os_port/os_cpu_c.c **** **   - OS_TCB *OSTCBHighRdy que apuntará al TCB de la tarea preparada de máxima prioridad (a reanud
 144:../os_port/os_cpu_c.c **** */
 145:../os_port/os_cpu_c.c **** 
 146:../os_port/os_cpu_c.c **** #if (OS_CPU_HOOKS_EN > 0) && (OS_TASK_SW_HOOK_EN > 0)
 147:../os_port/os_cpu_c.c **** void OSTaskSwHook( void )
 148:../os_port/os_cpu_c.c **** {
 1982              		.loc 1 148 0
 1983              		.cfi_startproc
 1984              		@ Function supports interworking.
 1985              		@ args = 0, pretend = 0, frame = 0
 1986              		@ frame_needed = 1, uses_anonymous_args = 0
 1987 024c 0DC0A0E1 		mov	ip, sp
 1988              	.LCFI14:
 1989              		.cfi_def_cfa_register 12
 1990 0250 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1991 0254 04B04CE2 		sub	fp, ip, #4
 1992              		.cfi_offset 14, -8
 1993              		.cfi_offset 13, -12
 1994              		.cfi_offset 11, -16
 1995              	.LCFI15:
 1996              		.cfi_def_cfa 11, 4
 149:../os_port/os_cpu_c.c **** }
 1997              		.loc 1 149 0
 1998 0258 0CD04BE2 		sub	sp, fp, #12
 1999 025c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2000 0260 1EFF2FE1 		bx	lr
 2001              		.cfi_endproc
 2002              	.LFE7:
 2004              		.align	2
 2005              		.global	OSTCBInitHook
 2007              	OSTCBInitHook:
 2008              	.LFB8:
 150:../os_port/os_cpu_c.c **** #endif
 151:../os_port/os_cpu_c.c **** 
 152:../os_port/os_cpu_c.c **** /*
 153:../os_port/os_cpu_c.c **** ** Esta función es llamada cada vez que se crea una tarea justo tras la creación de su TBC pero ant
 154:../os_port/os_cpu_c.c **** ** Las interrupciones pueden estar habilitadas o deshabilitadas.
 155:../os_port/os_cpu_c.c **** ** Toma como argumento un puntero al TCB de la tarea recién creada.
 156:../os_port/os_cpu_c.c **** */
 157:../os_port/os_cpu_c.c **** #if OS_CPU_HOOKS_EN > 0
 158:../os_port/os_cpu_c.c **** void OSTCBInitHook( OS_TCB *ptcb )
 159:../os_port/os_cpu_c.c **** {
 2009              		.loc 1 159 0
 2010              		.cfi_startproc
 2011              		@ Function supports interworking.
 2012              		@ args = 0, pretend = 0, frame = 8
 2013              		@ frame_needed = 1, uses_anonymous_args = 0
 2014 0264 0DC0A0E1 		mov	ip, sp
 2015              	.LCFI16:
 2016              		.cfi_def_cfa_register 12
 2017 0268 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2018 026c 04B04CE2 		sub	fp, ip, #4
 2019              		.cfi_offset 14, -8
 2020              		.cfi_offset 13, -12
 2021              		.cfi_offset 11, -16
 2022              	.LCFI17:
 2023              		.cfi_def_cfa 11, 4
 2024 0270 08D04DE2 		sub	sp, sp, #8
 2025 0274 10000BE5 		str	r0, [fp, #-16]
 160:../os_port/os_cpu_c.c **** }
 2026              		.loc 1 160 0
 2027 0278 0CD04BE2 		sub	sp, fp, #12
 2028 027c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2029 0280 1EFF2FE1 		bx	lr
 2030              		.cfi_endproc
 2031              	.LFE8:
 2033              		.align	2
 2034              		.global	OSTimeTickHook
 2036              	OSTimeTickHook:
 2037              	.LFB9:
 161:../os_port/os_cpu_c.c **** #endif
 162:../os_port/os_cpu_c.c **** 
 163:../os_port/os_cpu_c.c **** /*
 164:../os_port/os_cpu_c.c **** ** Esta función es llamada cada tick. Las interrupciones pueden estar habilitadas o deshabilitadas.
 165:../os_port/os_cpu_c.c **** */
 166:../os_port/os_cpu_c.c **** 
 167:../os_port/os_cpu_c.c **** #if (OS_CPU_HOOKS_EN > 0) && (OS_TIME_TICK_HOOK_EN > 0)
 168:../os_port/os_cpu_c.c **** void OSTimeTickHook( void )
 169:../os_port/os_cpu_c.c **** {
 2038              		.loc 1 169 0
 2039              		.cfi_startproc
 2040              		@ Function supports interworking.
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 1, uses_anonymous_args = 0
 2043 0284 0DC0A0E1 		mov	ip, sp
 2044              	.LCFI18:
 2045              		.cfi_def_cfa_register 12
 2046 0288 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2047 028c 04B04CE2 		sub	fp, ip, #4
 2048              		.cfi_offset 14, -8
 2049              		.cfi_offset 13, -12
 2050              		.cfi_offset 11, -16
 2051              	.LCFI19:
 2052              		.cfi_def_cfa 11, 4
 170:../os_port/os_cpu_c.c **** }
 2053              		.loc 1 170 0
 2054 0290 0CD04BE2 		sub	sp, fp, #12
 2055 0294 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2056 0298 1EFF2FE1 		bx	lr
 2057              		.cfi_endproc
 2058              	.LFE9:
 2060              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 os_cpu_c.c
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1665   .text:00000000 $a
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1668   .text:00000000 OSInitHookBegin
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1695   .text:00000018 OSInitHookEnd
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1722   .text:00000030 OSTaskCreateHook
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1751   .text:00000050 OSTaskDelHook
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1780   .text:00000070 OSTaskIdleHook
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1809   .text:0000008c OSTaskStatHook
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1836   .text:000000a4 OSTaskStkInit
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:1980   .text:0000024c OSTaskSwHook
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:2007   .text:00000264 OSTCBInitHook
C:\Users\VUser\AppData\Local\Temp\cc80y1ht.s:2036   .text:00000284 OSTimeTickHook
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sleep
